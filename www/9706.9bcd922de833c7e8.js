"use strict";(self.webpackChunkapp=self.webpackChunkapp||[]).push([[9706],{9706:(j,k,S)=>{S.r(k),S.d(k,{DEFAULT_ID:()=>w,Loader:()=>f,LoaderStatus:()=>c});var C=function o(e,i){if(e===i)return!0;if(e&&i&&"object"==typeof e&&"object"==typeof i){if(e.constructor!==i.constructor)return!1;var r,s,t;if(Array.isArray(e)){if((r=e.length)!=i.length)return!1;for(s=r;0!=s--;)if(!o(e[s],i[s]))return!1;return!0}if(e.constructor===RegExp)return e.source===i.source&&e.flags===i.flags;if(e.valueOf!==Object.prototype.valueOf)return e.valueOf()===i.valueOf();if(e.toString!==Object.prototype.toString)return e.toString()===i.toString();if((r=(t=Object.keys(e)).length)!==Object.keys(i).length)return!1;for(s=r;0!=s--;)if(!Object.prototype.hasOwnProperty.call(i,t[s]))return!1;for(s=r;0!=s--;){var n=t[s];if(!o(e[n],i[n]))return!1}return!0}return e!=e&&i!=i};const w="__googleMapsScriptId";var c=(()=>{return(o=c||(c={}))[o.INITIALIZED=0]="INITIALIZED",o[o.LOADING=1]="LOADING",o[o.SUCCESS=2]="SUCCESS",o[o.FAILURE=3]="FAILURE",c;var o})();class f{constructor({apiKey:e,authReferrerPolicy:i,channel:r,client:s,id:t=w,language:n,libraries:a=[],mapIds:p,nonce:u,region:l,retries:h=3,url:m="https://maps.googleapis.com/maps/api/js",version:d}){if(this.callbacks=[],this.done=!1,this.loading=!1,this.errors=[],this.apiKey=e,this.authReferrerPolicy=i,this.channel=r,this.client=s,this.id=t||w,this.language=n,this.libraries=a,this.mapIds=p,this.nonce=u,this.region=l,this.retries=h,this.url=m,this.version=d,f.instance){if(!C(this.options,f.instance.options))throw new Error(`Loader must not be called again with different options. ${JSON.stringify(this.options)} !== ${JSON.stringify(f.instance.options)}`);return f.instance}f.instance=this}get options(){return{version:this.version,apiKey:this.apiKey,channel:this.channel,client:this.client,id:this.id,libraries:this.libraries,language:this.language,region:this.region,mapIds:this.mapIds,nonce:this.nonce,url:this.url,authReferrerPolicy:this.authReferrerPolicy}}get status(){return this.errors.length?c.FAILURE:this.done?c.SUCCESS:this.loading?c.LOADING:c.INITIALIZED}get failed(){return this.done&&!this.loading&&this.errors.length>=this.retries+1}createUrl(){let e=this.url;return e+="?callback=__googleMapsCallback",this.apiKey&&(e+=`&key=${this.apiKey}`),this.channel&&(e+=`&channel=${this.channel}`),this.client&&(e+=`&client=${this.client}`),this.libraries.length>0&&(e+=`&libraries=${this.libraries.join(",")}`),this.language&&(e+=`&language=${this.language}`),this.region&&(e+=`&region=${this.region}`),this.version&&(e+=`&v=${this.version}`),this.mapIds&&(e+=`&map_ids=${this.mapIds.join(",")}`),this.authReferrerPolicy&&(e+=`&auth_referrer_policy=${this.authReferrerPolicy}`),e}deleteScript(){const e=document.getElementById(this.id);e&&e.remove()}load(){return this.loadPromise()}loadPromise(){return new Promise((e,i)=>{this.loadCallback(r=>{r?i(r.error):e(window.google)})})}importLibrary(e){return this.execute(),google.maps.importLibrary(e)}loadCallback(e){this.callbacks.push(e),this.execute()}setScript(){var e,i;if(document.getElementById(this.id))return void this.callback();const r={key:this.apiKey,channel:this.channel,client:this.client,libraries:this.libraries.length&&this.libraries,v:this.version,mapIds:this.mapIds,language:this.language,region:this.region,authReferrerPolicy:this.authReferrerPolicy};Object.keys(r).forEach(t=>!r[t]&&delete r[t]),null!==(i=null===(e=null==window?void 0:window.google)||void 0===e?void 0:e.maps)&&void 0!==i&&i.importLibrary||(t=>{let n,a,p,u="The Google Maps JavaScript API",l="google",h="importLibrary",m="__ib__",d=document,g=window;g=g[l]||(g[l]={});const y=g.maps||(g.maps={}),O=new Set,v=new URLSearchParams,P=()=>n||(n=new Promise((b,I)=>function A(o,e,i,r){return new(i||(i=Promise))(function(t,n){function a(l){try{u(r.next(l))}catch(h){n(h)}}function p(l){try{u(r.throw(l))}catch(h){n(h)}}function u(l){l.done?t(l.value):function s(t){return t instanceof i?t:new i(function(n){n(t)})}(l.value).then(a,p)}u((r=r.apply(o,e||[])).next())})}(this,void 0,void 0,function*(){var E;for(p in yield a=d.createElement("script"),a.id=this.id,v.set("libraries",[...O]+""),t)v.set(p.replace(/[A-Z]/g,R=>"_"+R[0].toLowerCase()),t[p]);v.set("callback",l+".maps."+m),a.src=this.url+"?"+v,y[m]=b,a.onerror=()=>n=I(Error(u+" could not load.")),a.nonce=this.nonce||(null===(E=d.querySelector("script[nonce]"))||void 0===E?void 0:E.nonce)||"",d.head.append(a)})));y[h]?console.warn(u+" only loads once. Ignoring:",t):y[h]=(b,...I)=>O.add(b)&&P().then(()=>y[h](b,...I))})(r);const s=this.libraries.map(t=>this.importLibrary(t));s.length||s.push(this.importLibrary("core")),Promise.all(s).then(()=>this.callback(),t=>{const n=new ErrorEvent("error",{error:t});this.loadErrorCallback(n)})}reset(){this.deleteScript(),this.done=!1,this.loading=!1,this.errors=[],this.onerrorEvent=null}resetIfRetryingFailed(){this.failed&&this.reset()}loadErrorCallback(e){if(this.errors.push(e),this.errors.length<=this.retries){const i=this.errors.length*Math.pow(2,this.errors.length);console.error(`Failed to load Google Maps script, retrying in ${i} ms.`),setTimeout(()=>{this.deleteScript(),this.setScript()},i)}else this.onerrorEvent=e,this.callback()}callback(){this.done=!0,this.loading=!1,this.callbacks.forEach(e=>{e(this.onerrorEvent)}),this.callbacks=[]}execute(){if(this.resetIfRetryingFailed(),this.done)this.callback();else{if(window.google&&window.google.maps&&window.google.maps.version)return console.warn("Google Maps already loaded outside @googlemaps/js-api-loader.This may result in undesirable behavior as options and script parameters may not match."),void this.callback();this.loading||(this.loading=!0,this.setScript())}}}}}]);